#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

require 'set'

# index all tags
preprocess do
  tags = Set.new
  items.each do |item|
    if item[:tags]
      item[:tags].each { |t| tags.add(t) }
    end
  end
  tag_items = Array.new
  tags.each do |tag|
    tag_item = Nanoc::Item.new(tag, {:tag => tag}, "/tags/#{tag}/")
    items << tag_item
    tag_items << tag_item
  end
  items << Nanoc::Item.new("", {:tags => tag_items}, "/tags/")
end

compile '/tags/' do
  layout 'tagcloud'
end

compile '/tags/*' do
  layout 'tag'
end

compile '/assets/*' do
  # don’t filter or layout
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    if ['markdown', 'md', 'pandoc', 'pdoc'].include?( item[:extension] )
      filter :pandoc, :mathjax => true
    else
      filter :erb
    end
    layout 'default'
  end
end

route '/assets/*' do
  # serve as-is
  item.identifier.chop + '.' + item[:extension]
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
